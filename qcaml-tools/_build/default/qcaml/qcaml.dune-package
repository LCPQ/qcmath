(lang dune 2.7)
(name qcaml)
(library
 (name qcaml)
 (kind normal)
 (synopsis "Main QCaml entry point")
 (archives (byte qcaml.cma) (native qcaml.cmxa))
 (plugins (byte qcaml.cma) (native qcaml.cmxs))
 (native_archives qcaml.a)
 (requires
  qcaml.ao
  qcaml.common
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.linear_algebra
  qcaml.mo
  qcaml.operators
  qcaml.particles
  qcaml.perturbation
  qcaml.simulation)
 (main_module_name Qcaml)
 (modes byte native)
 (modules
  (singleton (name Qcaml) (obj_name qcaml) (visibility public) (impl))))
(library
 (name qcaml.ao)
 (kind normal)
 (synopsis "Atomic basis set")
 (archives (byte ao/ao.cma) (native ao/ao.cmxa))
 (plugins (byte ao/ao.cma) (native ao/ao.cmxs))
 (native_archives ao/ao.a)
 (requires
  qcaml.common
  qcaml.particles
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.operators)
 (main_module_name Ao)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ao)
   (modules
    ((name Ao_dim) (obj_name ao__Ao_dim) (visibility public) (intf))
    ((name Basis) (obj_name ao__Basis) (visibility public) (impl) (intf))
    ((name Basis_gaussian)
     (obj_name ao__Basis_gaussian)
     (visibility public)
     (impl)
     (intf))
    ((name Basis_poly)
     (obj_name ao__Basis_poly)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ao)
    (obj_name ao)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.common)
 (kind normal)
 (synopsis "Utility functions used by all the other directories.")
 (archives (byte common/common.cma) (native common/common.cmxa))
 (plugins (byte common/common.cma) (native common/common.cmxs))
 (foreign_objects common/util.o)
 (foreign_archives common/libcommon_stubs.a)
 (native_archives common/common.a)
 (requires str zarith getopt)
 (main_module_name Common)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Common)
   (modules
    ((name Angular_momentum)
     (obj_name common__Angular_momentum)
     (visibility public)
     (impl)
     (intf))
    ((name Bitstring)
     (obj_name common__Bitstring)
     (visibility public)
     (impl)
     (intf))
    ((name Charge)
     (obj_name common__Charge)
     (visibility public)
     (impl)
     (intf))
    ((name Command_line)
     (obj_name common__Command_line)
     (visibility public)
     (impl)
     (intf))
    ((name Constants)
     (obj_name common__Constants)
     (visibility public)
     (impl)
     (intf))
    ((name Coordinate)
     (obj_name common__Coordinate)
     (visibility public)
     (impl)
     (intf))
    ((name Non_negative_float)
     (obj_name common__Non_negative_float)
     (visibility public)
     (impl)
     (intf))
    ((name Powers)
     (obj_name common__Powers)
     (visibility public)
     (impl)
     (intf))
    ((name Qcaml) (obj_name common__Qcaml) (visibility public) (impl) (intf))
    ((name Range) (obj_name common__Range) (visibility public) (impl) (intf))
    ((name Spin) (obj_name common__Spin) (visibility public) (impl) (intf))
    ((name Util) (obj_name common__Util) (visibility public) (impl) (intf))
    ((name Zkey) (obj_name common__Zkey) (visibility public) (impl) (intf))
    ((name Zmap) (obj_name common__Zmap) (visibility public) (impl) (intf)))
   (alias_module
    (name Common)
    (obj_name common)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.gaussian)
 (kind normal)
 (synopsis "Gaussian basis sets")
 (archives (byte gaussian/gaussian.cma) (native gaussian/gaussian.cmxa))
 (plugins (byte gaussian/gaussian.cma) (native gaussian/gaussian.cmxs))
 (native_archives gaussian/gaussian.a)
 (requires qcaml.common qcaml.particles)
 (main_module_name Gaussian)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Gaussian)
   (modules
    ((name Atomic_shell)
     (obj_name gaussian__Atomic_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Atomic_shell_pair)
     (obj_name gaussian__Atomic_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Atomic_shell_pair_couple)
     (obj_name gaussian__Atomic_shell_pair_couple)
     (visibility public)
     (impl)
     (intf))
    ((name Basis)
     (obj_name gaussian__Basis)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell)
     (obj_name gaussian__Contracted_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell_pair)
     (obj_name gaussian__Contracted_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell_pair_couple)
     (obj_name gaussian__Contracted_shell_pair_couple)
     (visibility public)
     (impl)
     (intf))
    ((name General_basis)
     (obj_name gaussian__General_basis)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell)
     (obj_name gaussian__Primitive_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell_pair)
     (obj_name gaussian__Primitive_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell_pair_couple)
     (obj_name gaussian__Primitive_shell_pair_couple)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Gaussian)
    (obj_name gaussian)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.gaussian_integrals)
 (kind normal)
 (synopsis "Integrals on the Gaussian basis sets")
 (archives
  (byte gaussian_integrals/gaussian_integrals.cma)
  (native gaussian_integrals/gaussian_integrals.cmxa))
 (plugins
  (byte gaussian_integrals/gaussian_integrals.cma)
  (native gaussian_integrals/gaussian_integrals.cmxs))
 (native_archives gaussian_integrals/gaussian_integrals.a)
 (requires qcaml.common qcaml.linear_algebra qcaml.gaussian qcaml.operators)
 (main_module_name Gaussian_integrals)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Gaussian_integrals)
   (modules
    ((name Electron_nucleus)
     (obj_name gaussian_integrals__Electron_nucleus)
     (visibility public)
     (impl)
     (intf))
    ((name Eri) (obj_name gaussian_integrals__Eri) (visibility public) (impl))
    ((name Eri_long_range)
     (obj_name gaussian_integrals__Eri_long_range)
     (visibility public)
     (impl))
    ((name F12) (obj_name gaussian_integrals__F12) (visibility public) (impl))
    ((name F12_rr)
     (obj_name gaussian_integrals__F12_rr)
     (visibility public)
     (impl))
    ((name Kinetic)
     (obj_name gaussian_integrals__Kinetic)
     (visibility public)
     (impl)
     (intf))
    ((name Matrix_on_basis)
     (obj_name gaussian_integrals__Matrix_on_basis)
     (visibility public)
     (intf))
    ((name Multipole)
     (obj_name gaussian_integrals__Multipole)
     (visibility public)
     (impl)
     (intf))
    ((name One_electron_rr)
     (obj_name gaussian_integrals__One_electron_rr)
     (visibility public)
     (impl))
    ((name Orthonormalization)
     (obj_name gaussian_integrals__Orthonormalization)
     (visibility public)
     (impl)
     (intf))
    ((name Overlap)
     (obj_name gaussian_integrals__Overlap)
     (visibility public)
     (impl)
     (intf))
    ((name Overlap_primitives)
     (obj_name gaussian_integrals__Overlap_primitives)
     (visibility public)
     (impl))
    ((name Screened_eri)
     (obj_name gaussian_integrals__Screened_eri)
     (visibility public)
     (impl))
    ((name Two_electron_integrals)
     (obj_name gaussian_integrals__Two_electron_integrals)
     (visibility public)
     (impl)
     (intf))
    ((name Two_electron_rr)
     (obj_name gaussian_integrals__Two_electron_rr)
     (visibility public)
     (impl))
    ((name Two_electron_rr_vectorized)
     (obj_name gaussian_integrals__Two_electron_rr_vectorized)
     (visibility public)
     (impl))
    ((name Zero_m_parameters)
     (obj_name gaussian_integrals__Zero_m_parameters)
     (visibility public)
     (impl)))
   (alias_module
    (name Gaussian_integrals)
    (obj_name gaussian_integrals)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.linear_algebra)
 (kind normal)
 (synopsis "Linear algebra utilities of QCaml libraries.")
 (archives
  (byte linear_algebra/linear_algebra.cma)
  (native linear_algebra/linear_algebra.cmxa))
 (plugins
  (byte linear_algebra/linear_algebra.cma)
  (native linear_algebra/linear_algebra.cmxs))
 (native_archives linear_algebra/linear_algebra.a)
 (requires qcaml.common lacaml)
 (main_module_name Linear_algebra)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Linear_algebra)
   (modules
    ((name Conventions)
     (obj_name linear_algebra__Conventions)
     (visibility public)
     (impl)
     (intf))
    ((name Diis)
     (obj_name linear_algebra__Diis)
     (visibility public)
     (impl)
     (intf))
    ((name Four_idx_storage)
     (obj_name linear_algebra__Four_idx_storage)
     (visibility public)
     (impl)
     (intf))
    ((name Linear_algebra)
     (obj_name linear_algebra)
     (visibility public)
     (impl))
    ((name Matrix)
     (obj_name linear_algebra__Matrix)
     (visibility public)
     (impl)
     (intf))
    ((name Orthonormalization)
     (obj_name linear_algebra__Orthonormalization)
     (visibility public)
     (impl)
     (intf))
    ((name Spherical_to_cartesian)
     (obj_name linear_algebra__Spherical_to_cartesian)
     (visibility public)
     (impl)
     (intf))
    ((name Vector)
     (obj_name linear_algebra__Vector)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Linear_algebra__)
    (obj_name linear_algebra__)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.mo)
 (kind normal)
 (synopsis "Molecular orbitals")
 (archives (byte mo/mo.cma) (native mo/mo.cmxa))
 (plugins (byte mo/mo.cma) (native mo/mo.cmxs))
 (native_archives mo/mo.a)
 (requires qcaml.simulation)
 (main_module_name Mo)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Mo)
   (modules
    ((name Basis) (obj_name mo__Basis) (visibility public) (impl) (intf))
    ((name Class) (obj_name mo__Class) (visibility public) (impl) (intf))
    ((name Fock) (obj_name mo__Fock) (visibility public) (impl) (intf))
    ((name Frozen_core)
     (obj_name mo__Frozen_core)
     (visibility public)
     (impl)
     (intf))
    ((name Guess) (obj_name mo__Guess) (visibility public) (impl) (intf))
    ((name Hartree_fock)
     (obj_name mo__Hartree_fock)
     (visibility public)
     (impl)
     (intf))
    ((name Localization)
     (obj_name mo__Localization)
     (visibility public)
     (impl)
     (intf))
    ((name Mo_dim) (obj_name mo__Mo_dim) (visibility public) (impl) (intf)))
   (alias_module
    (name Mo)
    (obj_name mo)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.operators)
 (kind normal)
 (synopsis "Parameteried operators, such as F12 and range-separation")
 (archives (byte operators/operators.cma) (native operators/operators.cmxa))
 (plugins (byte operators/operators.cma) (native operators/operators.cmxs))
 (native_archives operators/operators.a)
 (requires qcaml.common)
 (main_module_name Operators)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Operators)
   (modules
    ((name F12_operator)
     (obj_name operators__F12_operator)
     (visibility public)
     (impl))
    ((name Gaussian_operator)
     (obj_name operators__Gaussian_operator)
     (visibility public)
     (impl))
    ((name Operator)
     (obj_name operators__Operator)
     (visibility public)
     (impl)
     (intf))
    ((name Rs_operator)
     (obj_name operators__Rs_operator)
     (visibility public)
     (impl)))
   (alias_module
    (name Operators)
    (obj_name operators)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.particles)
 (kind normal)
 (synopsis "Information relative to particles (electrons and nuclei).")
 (archives (byte particles/particles.cma) (native particles/particles.cmxa))
 (plugins (byte particles/particles.cma) (native particles/particles.cmxs))
 (native_archives particles/particles.a)
 (requires qcaml.common)
 (main_module_name Particles)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Particles)
   (modules
    ((name Electrons)
     (obj_name particles__Electrons)
     (visibility public)
     (impl)
     (intf))
    ((name Element)
     (obj_name particles__Element)
     (visibility public)
     (impl)
     (intf))
    ((name Mass) (obj_name particles__Mass) (visibility public) (impl) (intf))
    ((name Nuclei)
     (obj_name particles__Nuclei)
     (visibility public)
     (impl)
     (intf))
    ((name Nuclei_lexer)
     (obj_name particles__Nuclei_lexer)
     (visibility public)
     (impl))
    ((name Xyz_ast) (obj_name particles__Xyz_ast) (visibility public) (intf))
    ((name Xyz_parser)
     (obj_name particles__Xyz_parser)
     (visibility public)
     (impl)
     (intf))
    ((name Zmatrix)
     (obj_name particles__Zmatrix)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Particles)
    (obj_name particles)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.perturbation)
 (kind normal)
 (synopsis "Perturbation theory")
 (archives
  (byte perturbation/perturbation.cma)
  (native perturbation/perturbation.cmxa))
 (plugins
  (byte perturbation/perturbation.cma)
  (native perturbation/perturbation.cmxs))
 (native_archives perturbation/perturbation.a)
 (requires qcaml.simulation qcaml.mo)
 (main_module_name Perturbation)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Perturbation)
   (modules
    ((name Mp2)
     (obj_name perturbation__Mp2)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Perturbation)
    (obj_name perturbation)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.simulation)
 (kind normal)
 (synopsis
  "Data describing a simulation (AOs, operators, nuclear coordinate,...)")
 (archives
  (byte simulation/simulation.cma)
  (native simulation/simulation.cmxa))
 (plugins
  (byte simulation/simulation.cma)
  (native simulation/simulation.cmxs))
 (native_archives simulation/simulation.a)
 (requires
  qcaml.common
  qcaml.particles
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.operators
  qcaml.ao)
 (main_module_name Simulation)
 (modes byte native)
 (modules
  (singleton
   (name Simulation)
   (obj_name simulation)
   (visibility public)
   (impl)
   (intf))))
(library
 (name qcaml.top)
 (kind normal)
 (synopsis "Installs pretty printers for top-level.")
 (archives (byte top/top.cma) (native top/top.cmxa))
 (plugins (byte top/top.cma) (native top/top.cmxs))
 (native_archives top/top.a)
 (requires compiler-libs.toplevel qcaml)
 (main_module_name Top)
 (modes byte)
 (modules
  (wrapped
   (main_module_name Top)
   (modules
    ((name Install_printers)
     (obj_name top__Install_printers)
     (visibility public)
     (impl)))
   (alias_module
    (name Top)
    (obj_name top)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
