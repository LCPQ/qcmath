(lang dune 3.4)
(name qcaml)
(sections (lib .) (libexec .) (doc ../../doc/qcaml) (stublibs ../stublibs))
(files
 (lib
  (META
   ao/ao.a
   ao/ao.cma
   ao/ao.cmi
   ao/ao.cmt
   ao/ao.cmx
   ao/ao.cmxa
   ao/ao.ml
   ao/ao__Ao_dim.cmi
   ao/ao__Ao_dim.cmti
   ao/ao__Basis.cmi
   ao/ao__Basis.cmt
   ao/ao__Basis.cmti
   ao/ao__Basis.cmx
   ao/ao__Basis_gaussian.cmi
   ao/ao__Basis_gaussian.cmt
   ao/ao__Basis_gaussian.cmti
   ao/ao__Basis_gaussian.cmx
   ao/ao__Basis_poly.cmi
   ao/ao__Basis_poly.cmt
   ao/ao__Basis_poly.cmti
   ao/ao__Basis_poly.cmx
   ao/ao_dim.mli
   ao/basis.ml
   ao/basis.mli
   ao/basis_gaussian.ml
   ao/basis_gaussian.mli
   ao/basis_poly.ml
   ao/basis_poly.mli
   common/angular_momentum.ml
   common/angular_momentum.mli
   common/bitstring.ml
   common/bitstring.mli
   common/charge.ml
   common/charge.mli
   common/command_line.ml
   common/command_line.mli
   common/common.a
   common/common.cma
   common/common.cmi
   common/common.cmt
   common/common.cmx
   common/common.cmxa
   common/common.ml
   common/common__Angular_momentum.cmi
   common/common__Angular_momentum.cmt
   common/common__Angular_momentum.cmti
   common/common__Angular_momentum.cmx
   common/common__Bitstring.cmi
   common/common__Bitstring.cmt
   common/common__Bitstring.cmti
   common/common__Bitstring.cmx
   common/common__Charge.cmi
   common/common__Charge.cmt
   common/common__Charge.cmti
   common/common__Charge.cmx
   common/common__Command_line.cmi
   common/common__Command_line.cmt
   common/common__Command_line.cmti
   common/common__Command_line.cmx
   common/common__Constants.cmi
   common/common__Constants.cmt
   common/common__Constants.cmti
   common/common__Constants.cmx
   common/common__Coordinate.cmi
   common/common__Coordinate.cmt
   common/common__Coordinate.cmti
   common/common__Coordinate.cmx
   common/common__Non_negative_float.cmi
   common/common__Non_negative_float.cmt
   common/common__Non_negative_float.cmti
   common/common__Non_negative_float.cmx
   common/common__Powers.cmi
   common/common__Powers.cmt
   common/common__Powers.cmti
   common/common__Powers.cmx
   common/common__Qcaml.cmi
   common/common__Qcaml.cmt
   common/common__Qcaml.cmti
   common/common__Qcaml.cmx
   common/common__Range.cmi
   common/common__Range.cmt
   common/common__Range.cmti
   common/common__Range.cmx
   common/common__Spin.cmi
   common/common__Spin.cmt
   common/common__Spin.cmti
   common/common__Spin.cmx
   common/common__Util.cmi
   common/common__Util.cmt
   common/common__Util.cmti
   common/common__Util.cmx
   common/common__Zkey.cmi
   common/common__Zkey.cmt
   common/common__Zkey.cmti
   common/common__Zkey.cmx
   common/common__Zmap.cmi
   common/common__Zmap.cmt
   common/common__Zmap.cmti
   common/common__Zmap.cmx
   common/constants.ml
   common/constants.mli
   common/coordinate.ml
   common/coordinate.mli
   common/libcommon_stubs.a
   common/non_negative_float.ml
   common/non_negative_float.mli
   common/powers.ml
   common/powers.mli
   common/qcaml.ml
   common/qcaml.mli
   common/range.ml
   common/range.mli
   common/spin.ml
   common/spin.mli
   common/util.ml
   common/util.mli
   common/zkey.ml
   common/zkey.mli
   common/zmap.ml
   common/zmap.mli
   dune-package
   gaussian/atomic_shell.ml
   gaussian/atomic_shell.mli
   gaussian/atomic_shell_pair.ml
   gaussian/atomic_shell_pair.mli
   gaussian/atomic_shell_pair_couple.ml
   gaussian/atomic_shell_pair_couple.mli
   gaussian/basis.ml
   gaussian/basis.mli
   gaussian/contracted_shell.ml
   gaussian/contracted_shell.mli
   gaussian/contracted_shell_pair.ml
   gaussian/contracted_shell_pair.mli
   gaussian/contracted_shell_pair_couple.ml
   gaussian/contracted_shell_pair_couple.mli
   gaussian/gaussian.a
   gaussian/gaussian.cma
   gaussian/gaussian.cmi
   gaussian/gaussian.cmt
   gaussian/gaussian.cmx
   gaussian/gaussian.cmxa
   gaussian/gaussian.ml
   gaussian/gaussian__Atomic_shell.cmi
   gaussian/gaussian__Atomic_shell.cmt
   gaussian/gaussian__Atomic_shell.cmti
   gaussian/gaussian__Atomic_shell.cmx
   gaussian/gaussian__Atomic_shell_pair.cmi
   gaussian/gaussian__Atomic_shell_pair.cmt
   gaussian/gaussian__Atomic_shell_pair.cmti
   gaussian/gaussian__Atomic_shell_pair.cmx
   gaussian/gaussian__Atomic_shell_pair_couple.cmi
   gaussian/gaussian__Atomic_shell_pair_couple.cmt
   gaussian/gaussian__Atomic_shell_pair_couple.cmti
   gaussian/gaussian__Atomic_shell_pair_couple.cmx
   gaussian/gaussian__Basis.cmi
   gaussian/gaussian__Basis.cmt
   gaussian/gaussian__Basis.cmti
   gaussian/gaussian__Basis.cmx
   gaussian/gaussian__Contracted_shell.cmi
   gaussian/gaussian__Contracted_shell.cmt
   gaussian/gaussian__Contracted_shell.cmti
   gaussian/gaussian__Contracted_shell.cmx
   gaussian/gaussian__Contracted_shell_pair.cmi
   gaussian/gaussian__Contracted_shell_pair.cmt
   gaussian/gaussian__Contracted_shell_pair.cmti
   gaussian/gaussian__Contracted_shell_pair.cmx
   gaussian/gaussian__Contracted_shell_pair_couple.cmi
   gaussian/gaussian__Contracted_shell_pair_couple.cmt
   gaussian/gaussian__Contracted_shell_pair_couple.cmti
   gaussian/gaussian__Contracted_shell_pair_couple.cmx
   gaussian/gaussian__General_basis.cmi
   gaussian/gaussian__General_basis.cmt
   gaussian/gaussian__General_basis.cmti
   gaussian/gaussian__General_basis.cmx
   gaussian/gaussian__Primitive_shell.cmi
   gaussian/gaussian__Primitive_shell.cmt
   gaussian/gaussian__Primitive_shell.cmti
   gaussian/gaussian__Primitive_shell.cmx
   gaussian/gaussian__Primitive_shell_pair.cmi
   gaussian/gaussian__Primitive_shell_pair.cmt
   gaussian/gaussian__Primitive_shell_pair.cmti
   gaussian/gaussian__Primitive_shell_pair.cmx
   gaussian/gaussian__Primitive_shell_pair_couple.cmi
   gaussian/gaussian__Primitive_shell_pair_couple.cmt
   gaussian/gaussian__Primitive_shell_pair_couple.cmti
   gaussian/gaussian__Primitive_shell_pair_couple.cmx
   gaussian/general_basis.ml
   gaussian/general_basis.mli
   gaussian/primitive_shell.ml
   gaussian/primitive_shell.mli
   gaussian/primitive_shell_pair.ml
   gaussian/primitive_shell_pair.mli
   gaussian/primitive_shell_pair_couple.ml
   gaussian/primitive_shell_pair_couple.mli
   gaussian_integrals/electron_nucleus.ml
   gaussian_integrals/electron_nucleus.mli
   gaussian_integrals/eri.ml
   gaussian_integrals/eri_long_range.ml
   gaussian_integrals/f12.ml
   gaussian_integrals/f12_rr.ml
   gaussian_integrals/gaussian_integrals.a
   gaussian_integrals/gaussian_integrals.cma
   gaussian_integrals/gaussian_integrals.cmi
   gaussian_integrals/gaussian_integrals.cmt
   gaussian_integrals/gaussian_integrals.cmx
   gaussian_integrals/gaussian_integrals.cmxa
   gaussian_integrals/gaussian_integrals.ml
   gaussian_integrals/gaussian_integrals__Electron_nucleus.cmi
   gaussian_integrals/gaussian_integrals__Electron_nucleus.cmt
   gaussian_integrals/gaussian_integrals__Electron_nucleus.cmti
   gaussian_integrals/gaussian_integrals__Electron_nucleus.cmx
   gaussian_integrals/gaussian_integrals__Eri.cmi
   gaussian_integrals/gaussian_integrals__Eri.cmt
   gaussian_integrals/gaussian_integrals__Eri.cmx
   gaussian_integrals/gaussian_integrals__Eri_long_range.cmi
   gaussian_integrals/gaussian_integrals__Eri_long_range.cmt
   gaussian_integrals/gaussian_integrals__Eri_long_range.cmx
   gaussian_integrals/gaussian_integrals__F12.cmi
   gaussian_integrals/gaussian_integrals__F12.cmt
   gaussian_integrals/gaussian_integrals__F12.cmx
   gaussian_integrals/gaussian_integrals__F12_rr.cmi
   gaussian_integrals/gaussian_integrals__F12_rr.cmt
   gaussian_integrals/gaussian_integrals__F12_rr.cmx
   gaussian_integrals/gaussian_integrals__Kinetic.cmi
   gaussian_integrals/gaussian_integrals__Kinetic.cmt
   gaussian_integrals/gaussian_integrals__Kinetic.cmti
   gaussian_integrals/gaussian_integrals__Kinetic.cmx
   gaussian_integrals/gaussian_integrals__Matrix_on_basis.cmi
   gaussian_integrals/gaussian_integrals__Matrix_on_basis.cmti
   gaussian_integrals/gaussian_integrals__Multipole.cmi
   gaussian_integrals/gaussian_integrals__Multipole.cmt
   gaussian_integrals/gaussian_integrals__Multipole.cmti
   gaussian_integrals/gaussian_integrals__Multipole.cmx
   gaussian_integrals/gaussian_integrals__One_electron_rr.cmi
   gaussian_integrals/gaussian_integrals__One_electron_rr.cmt
   gaussian_integrals/gaussian_integrals__One_electron_rr.cmx
   gaussian_integrals/gaussian_integrals__Orthonormalization.cmi
   gaussian_integrals/gaussian_integrals__Orthonormalization.cmt
   gaussian_integrals/gaussian_integrals__Orthonormalization.cmti
   gaussian_integrals/gaussian_integrals__Orthonormalization.cmx
   gaussian_integrals/gaussian_integrals__Overlap.cmi
   gaussian_integrals/gaussian_integrals__Overlap.cmt
   gaussian_integrals/gaussian_integrals__Overlap.cmti
   gaussian_integrals/gaussian_integrals__Overlap.cmx
   gaussian_integrals/gaussian_integrals__Overlap_primitives.cmi
   gaussian_integrals/gaussian_integrals__Overlap_primitives.cmt
   gaussian_integrals/gaussian_integrals__Overlap_primitives.cmx
   gaussian_integrals/gaussian_integrals__Screened_eri.cmi
   gaussian_integrals/gaussian_integrals__Screened_eri.cmt
   gaussian_integrals/gaussian_integrals__Screened_eri.cmx
   gaussian_integrals/gaussian_integrals__Two_electron_integrals.cmi
   gaussian_integrals/gaussian_integrals__Two_electron_integrals.cmt
   gaussian_integrals/gaussian_integrals__Two_electron_integrals.cmti
   gaussian_integrals/gaussian_integrals__Two_electron_integrals.cmx
   gaussian_integrals/gaussian_integrals__Two_electron_rr.cmi
   gaussian_integrals/gaussian_integrals__Two_electron_rr.cmt
   gaussian_integrals/gaussian_integrals__Two_electron_rr.cmx
   gaussian_integrals/gaussian_integrals__Two_electron_rr_vectorized.cmi
   gaussian_integrals/gaussian_integrals__Two_electron_rr_vectorized.cmt
   gaussian_integrals/gaussian_integrals__Two_electron_rr_vectorized.cmx
   gaussian_integrals/gaussian_integrals__Zero_m_parameters.cmi
   gaussian_integrals/gaussian_integrals__Zero_m_parameters.cmt
   gaussian_integrals/gaussian_integrals__Zero_m_parameters.cmx
   gaussian_integrals/kinetic.ml
   gaussian_integrals/kinetic.mli
   gaussian_integrals/matrix_on_basis.mli
   gaussian_integrals/multipole.ml
   gaussian_integrals/multipole.mli
   gaussian_integrals/one_electron_rr.ml
   gaussian_integrals/orthonormalization.ml
   gaussian_integrals/orthonormalization.mli
   gaussian_integrals/overlap.ml
   gaussian_integrals/overlap.mli
   gaussian_integrals/overlap_primitives.ml
   gaussian_integrals/screened_eri.ml
   gaussian_integrals/two_electron_integrals.ml
   gaussian_integrals/two_electron_integrals.mli
   gaussian_integrals/two_electron_rr.ml
   gaussian_integrals/two_electron_rr_vectorized.ml
   gaussian_integrals/zero_m_parameters.ml
   linear_algebra/conventions.ml
   linear_algebra/conventions.mli
   linear_algebra/diis.ml
   linear_algebra/diis.mli
   linear_algebra/four_idx_storage.ml
   linear_algebra/four_idx_storage.mli
   linear_algebra/linear_algebra.a
   linear_algebra/linear_algebra.cma
   linear_algebra/linear_algebra.cmi
   linear_algebra/linear_algebra.cmt
   linear_algebra/linear_algebra.cmx
   linear_algebra/linear_algebra.cmxa
   linear_algebra/linear_algebra.ml
   linear_algebra/linear_algebra__.cmi
   linear_algebra/linear_algebra__.cmt
   linear_algebra/linear_algebra__.cmx
   linear_algebra/linear_algebra__.ml
   linear_algebra/linear_algebra__Conventions.cmi
   linear_algebra/linear_algebra__Conventions.cmt
   linear_algebra/linear_algebra__Conventions.cmti
   linear_algebra/linear_algebra__Conventions.cmx
   linear_algebra/linear_algebra__Diis.cmi
   linear_algebra/linear_algebra__Diis.cmt
   linear_algebra/linear_algebra__Diis.cmti
   linear_algebra/linear_algebra__Diis.cmx
   linear_algebra/linear_algebra__Four_idx_storage.cmi
   linear_algebra/linear_algebra__Four_idx_storage.cmt
   linear_algebra/linear_algebra__Four_idx_storage.cmti
   linear_algebra/linear_algebra__Four_idx_storage.cmx
   linear_algebra/linear_algebra__Matrix.cmi
   linear_algebra/linear_algebra__Matrix.cmt
   linear_algebra/linear_algebra__Matrix.cmti
   linear_algebra/linear_algebra__Matrix.cmx
   linear_algebra/linear_algebra__Orthonormalization.cmi
   linear_algebra/linear_algebra__Orthonormalization.cmt
   linear_algebra/linear_algebra__Orthonormalization.cmti
   linear_algebra/linear_algebra__Orthonormalization.cmx
   linear_algebra/linear_algebra__Spherical_to_cartesian.cmi
   linear_algebra/linear_algebra__Spherical_to_cartesian.cmt
   linear_algebra/linear_algebra__Spherical_to_cartesian.cmti
   linear_algebra/linear_algebra__Spherical_to_cartesian.cmx
   linear_algebra/linear_algebra__Vector.cmi
   linear_algebra/linear_algebra__Vector.cmt
   linear_algebra/linear_algebra__Vector.cmti
   linear_algebra/linear_algebra__Vector.cmx
   linear_algebra/matrix.ml
   linear_algebra/matrix.mli
   linear_algebra/orthonormalization.ml
   linear_algebra/orthonormalization.mli
   linear_algebra/spherical_to_cartesian.ml
   linear_algebra/spherical_to_cartesian.mli
   linear_algebra/vector.ml
   linear_algebra/vector.mli
   mo/basis.ml
   mo/basis.mli
   mo/class.ml
   mo/class.mli
   mo/fock.ml
   mo/fock.mli
   mo/frozen_core.ml
   mo/frozen_core.mli
   mo/guess.ml
   mo/guess.mli
   mo/hartree_fock.ml
   mo/hartree_fock.mli
   mo/localization.ml
   mo/localization.mli
   mo/mo.a
   mo/mo.cma
   mo/mo.cmi
   mo/mo.cmt
   mo/mo.cmx
   mo/mo.cmxa
   mo/mo.ml
   mo/mo__Basis.cmi
   mo/mo__Basis.cmt
   mo/mo__Basis.cmti
   mo/mo__Basis.cmx
   mo/mo__Class.cmi
   mo/mo__Class.cmt
   mo/mo__Class.cmti
   mo/mo__Class.cmx
   mo/mo__Fock.cmi
   mo/mo__Fock.cmt
   mo/mo__Fock.cmti
   mo/mo__Fock.cmx
   mo/mo__Frozen_core.cmi
   mo/mo__Frozen_core.cmt
   mo/mo__Frozen_core.cmti
   mo/mo__Frozen_core.cmx
   mo/mo__Guess.cmi
   mo/mo__Guess.cmt
   mo/mo__Guess.cmti
   mo/mo__Guess.cmx
   mo/mo__Hartree_fock.cmi
   mo/mo__Hartree_fock.cmt
   mo/mo__Hartree_fock.cmti
   mo/mo__Hartree_fock.cmx
   mo/mo__Localization.cmi
   mo/mo__Localization.cmt
   mo/mo__Localization.cmti
   mo/mo__Localization.cmx
   mo/mo__Mo_dim.cmi
   mo/mo__Mo_dim.cmt
   mo/mo__Mo_dim.cmti
   mo/mo__Mo_dim.cmx
   mo/mo_dim.ml
   mo/mo_dim.mli
   opam
   operators/f12_operator.ml
   operators/gaussian_operator.ml
   operators/operator.ml
   operators/operator.mli
   operators/operators.a
   operators/operators.cma
   operators/operators.cmi
   operators/operators.cmt
   operators/operators.cmx
   operators/operators.cmxa
   operators/operators.ml
   operators/operators__F12_operator.cmi
   operators/operators__F12_operator.cmt
   operators/operators__F12_operator.cmx
   operators/operators__Gaussian_operator.cmi
   operators/operators__Gaussian_operator.cmt
   operators/operators__Gaussian_operator.cmx
   operators/operators__Operator.cmi
   operators/operators__Operator.cmt
   operators/operators__Operator.cmti
   operators/operators__Operator.cmx
   operators/operators__Rs_operator.cmi
   operators/operators__Rs_operator.cmt
   operators/operators__Rs_operator.cmx
   operators/rs_operator.ml
   particles/electrons.ml
   particles/electrons.mli
   particles/element.ml
   particles/element.mli
   particles/mass.ml
   particles/mass.mli
   particles/nuclei.ml
   particles/nuclei.mli
   particles/nuclei_lexer.ml
   particles/particles.a
   particles/particles.cma
   particles/particles.cmi
   particles/particles.cmt
   particles/particles.cmx
   particles/particles.cmxa
   particles/particles.ml
   particles/particles__Electrons.cmi
   particles/particles__Electrons.cmt
   particles/particles__Electrons.cmti
   particles/particles__Electrons.cmx
   particles/particles__Element.cmi
   particles/particles__Element.cmt
   particles/particles__Element.cmti
   particles/particles__Element.cmx
   particles/particles__Mass.cmi
   particles/particles__Mass.cmt
   particles/particles__Mass.cmti
   particles/particles__Mass.cmx
   particles/particles__Nuclei.cmi
   particles/particles__Nuclei.cmt
   particles/particles__Nuclei.cmti
   particles/particles__Nuclei.cmx
   particles/particles__Nuclei_lexer.cmi
   particles/particles__Nuclei_lexer.cmt
   particles/particles__Nuclei_lexer.cmx
   particles/particles__Xyz_ast.cmi
   particles/particles__Xyz_ast.cmti
   particles/particles__Xyz_parser.cmi
   particles/particles__Xyz_parser.cmt
   particles/particles__Xyz_parser.cmti
   particles/particles__Xyz_parser.cmx
   particles/particles__Zmatrix.cmi
   particles/particles__Zmatrix.cmt
   particles/particles__Zmatrix.cmti
   particles/particles__Zmatrix.cmx
   particles/xyz_ast.mli
   particles/xyz_parser.ml
   particles/xyz_parser.mli
   particles/zmatrix.ml
   particles/zmatrix.mli
   perturbation/mp2.ml
   perturbation/mp2.mli
   perturbation/perturbation.a
   perturbation/perturbation.cma
   perturbation/perturbation.cmi
   perturbation/perturbation.cmt
   perturbation/perturbation.cmx
   perturbation/perturbation.cmxa
   perturbation/perturbation.ml
   perturbation/perturbation__Mp2.cmi
   perturbation/perturbation__Mp2.cmt
   perturbation/perturbation__Mp2.cmti
   perturbation/perturbation__Mp2.cmx
   qcaml.a
   qcaml.cma
   qcaml.cmi
   qcaml.cmt
   qcaml.cmx
   qcaml.cmxa
   qcaml.ml
   simulation/simulation.a
   simulation/simulation.cma
   simulation/simulation.cmi
   simulation/simulation.cmt
   simulation/simulation.cmti
   simulation/simulation.cmx
   simulation/simulation.cmxa
   simulation/simulation.ml
   simulation/simulation.mli
   top/install_printers.ml
   top/top.cma
   top/top.cmi
   top/top.cmt
   top/top.ml
   top/top__Install_printers.cmi
   top/top__Install_printers.cmt))
 (libexec
  (ao/ao.cmxs
   common/common.cmxs
   gaussian/gaussian.cmxs
   gaussian_integrals/gaussian_integrals.cmxs
   linear_algebra/linear_algebra.cmxs
   mo/mo.cmxs
   operators/operators.cmxs
   particles/particles.cmxs
   perturbation/perturbation.cmxs
   qcaml.cmxs
   simulation/simulation.cmxs))
 (doc (README.md))
 (stublibs (dllcommon_stubs.so)))
(library
 (name qcaml)
 (kind normal)
 (synopsis "Main QCaml entry point")
 (archives (byte qcaml.cma) (native qcaml.cmxa))
 (plugins (byte qcaml.cma) (native qcaml.cmxs))
 (native_archives qcaml.a)
 (requires
  qcaml.ao
  qcaml.common
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.linear_algebra
  qcaml.mo
  qcaml.operators
  qcaml.particles
  qcaml.perturbation
  qcaml.simulation)
 (main_module_name Qcaml)
 (modes byte native)
 (modules
  (singleton (name Qcaml) (obj_name qcaml) (visibility public) (impl))))
(library
 (name qcaml.ao)
 (kind normal)
 (synopsis "Atomic basis set")
 (archives (byte ao/ao.cma) (native ao/ao.cmxa))
 (plugins (byte ao/ao.cma) (native ao/ao.cmxs))
 (native_archives ao/ao.a)
 (requires
  qcaml.common
  qcaml.particles
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.operators)
 (main_module_name Ao)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ao)
   (modules
    ((name Ao_dim) (obj_name ao__Ao_dim) (visibility public) (intf))
    ((name Basis) (obj_name ao__Basis) (visibility public) (impl) (intf))
    ((name Basis_gaussian)
     (obj_name ao__Basis_gaussian)
     (visibility public)
     (impl)
     (intf))
    ((name Basis_poly)
     (obj_name ao__Basis_poly)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ao)
    (obj_name ao)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.common)
 (kind normal)
 (synopsis "Utility functions used by all the other directories.")
 (archives (byte common/common.cma) (native common/common.cmxa))
 (plugins (byte common/common.cma) (native common/common.cmxs))
 (foreign_objects common/util.o)
 (foreign_archives common/libcommon_stubs.a)
 (native_archives common/common.a)
 (requires str zarith getopt)
 (main_module_name Common)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Common)
   (modules
    ((name Angular_momentum)
     (obj_name common__Angular_momentum)
     (visibility public)
     (impl)
     (intf))
    ((name Bitstring)
     (obj_name common__Bitstring)
     (visibility public)
     (impl)
     (intf))
    ((name Charge)
     (obj_name common__Charge)
     (visibility public)
     (impl)
     (intf))
    ((name Command_line)
     (obj_name common__Command_line)
     (visibility public)
     (impl)
     (intf))
    ((name Constants)
     (obj_name common__Constants)
     (visibility public)
     (impl)
     (intf))
    ((name Coordinate)
     (obj_name common__Coordinate)
     (visibility public)
     (impl)
     (intf))
    ((name Non_negative_float)
     (obj_name common__Non_negative_float)
     (visibility public)
     (impl)
     (intf))
    ((name Powers)
     (obj_name common__Powers)
     (visibility public)
     (impl)
     (intf))
    ((name Qcaml) (obj_name common__Qcaml) (visibility public) (impl) (intf))
    ((name Range) (obj_name common__Range) (visibility public) (impl) (intf))
    ((name Spin) (obj_name common__Spin) (visibility public) (impl) (intf))
    ((name Util) (obj_name common__Util) (visibility public) (impl) (intf))
    ((name Zkey) (obj_name common__Zkey) (visibility public) (impl) (intf))
    ((name Zmap) (obj_name common__Zmap) (visibility public) (impl) (intf)))
   (alias_module
    (name Common)
    (obj_name common)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.gaussian)
 (kind normal)
 (synopsis "Gaussian basis sets")
 (archives (byte gaussian/gaussian.cma) (native gaussian/gaussian.cmxa))
 (plugins (byte gaussian/gaussian.cma) (native gaussian/gaussian.cmxs))
 (native_archives gaussian/gaussian.a)
 (requires qcaml.common qcaml.particles)
 (main_module_name Gaussian)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Gaussian)
   (modules
    ((name Atomic_shell)
     (obj_name gaussian__Atomic_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Atomic_shell_pair)
     (obj_name gaussian__Atomic_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Atomic_shell_pair_couple)
     (obj_name gaussian__Atomic_shell_pair_couple)
     (visibility public)
     (impl)
     (intf))
    ((name Basis)
     (obj_name gaussian__Basis)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell)
     (obj_name gaussian__Contracted_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell_pair)
     (obj_name gaussian__Contracted_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Contracted_shell_pair_couple)
     (obj_name gaussian__Contracted_shell_pair_couple)
     (visibility public)
     (impl)
     (intf))
    ((name General_basis)
     (obj_name gaussian__General_basis)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell)
     (obj_name gaussian__Primitive_shell)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell_pair)
     (obj_name gaussian__Primitive_shell_pair)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive_shell_pair_couple)
     (obj_name gaussian__Primitive_shell_pair_couple)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Gaussian)
    (obj_name gaussian)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.gaussian_integrals)
 (kind normal)
 (synopsis "Integrals on the Gaussian basis sets")
 (archives
  (byte gaussian_integrals/gaussian_integrals.cma)
  (native gaussian_integrals/gaussian_integrals.cmxa))
 (plugins
  (byte gaussian_integrals/gaussian_integrals.cma)
  (native gaussian_integrals/gaussian_integrals.cmxs))
 (native_archives gaussian_integrals/gaussian_integrals.a)
 (requires qcaml.common qcaml.linear_algebra qcaml.gaussian qcaml.operators)
 (main_module_name Gaussian_integrals)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Gaussian_integrals)
   (modules
    ((name Electron_nucleus)
     (obj_name gaussian_integrals__Electron_nucleus)
     (visibility public)
     (impl)
     (intf))
    ((name Eri) (obj_name gaussian_integrals__Eri) (visibility public) (impl))
    ((name Eri_long_range)
     (obj_name gaussian_integrals__Eri_long_range)
     (visibility public)
     (impl))
    ((name F12) (obj_name gaussian_integrals__F12) (visibility public) (impl))
    ((name F12_rr)
     (obj_name gaussian_integrals__F12_rr)
     (visibility public)
     (impl))
    ((name Kinetic)
     (obj_name gaussian_integrals__Kinetic)
     (visibility public)
     (impl)
     (intf))
    ((name Matrix_on_basis)
     (obj_name gaussian_integrals__Matrix_on_basis)
     (visibility public)
     (intf))
    ((name Multipole)
     (obj_name gaussian_integrals__Multipole)
     (visibility public)
     (impl)
     (intf))
    ((name One_electron_rr)
     (obj_name gaussian_integrals__One_electron_rr)
     (visibility public)
     (impl))
    ((name Orthonormalization)
     (obj_name gaussian_integrals__Orthonormalization)
     (visibility public)
     (impl)
     (intf))
    ((name Overlap)
     (obj_name gaussian_integrals__Overlap)
     (visibility public)
     (impl)
     (intf))
    ((name Overlap_primitives)
     (obj_name gaussian_integrals__Overlap_primitives)
     (visibility public)
     (impl))
    ((name Screened_eri)
     (obj_name gaussian_integrals__Screened_eri)
     (visibility public)
     (impl))
    ((name Two_electron_integrals)
     (obj_name gaussian_integrals__Two_electron_integrals)
     (visibility public)
     (impl)
     (intf))
    ((name Two_electron_rr)
     (obj_name gaussian_integrals__Two_electron_rr)
     (visibility public)
     (impl))
    ((name Two_electron_rr_vectorized)
     (obj_name gaussian_integrals__Two_electron_rr_vectorized)
     (visibility public)
     (impl))
    ((name Zero_m_parameters)
     (obj_name gaussian_integrals__Zero_m_parameters)
     (visibility public)
     (impl)))
   (alias_module
    (name Gaussian_integrals)
    (obj_name gaussian_integrals)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.linear_algebra)
 (kind normal)
 (synopsis "Linear algebra utilities of QCaml libraries.")
 (archives
  (byte linear_algebra/linear_algebra.cma)
  (native linear_algebra/linear_algebra.cmxa))
 (plugins
  (byte linear_algebra/linear_algebra.cma)
  (native linear_algebra/linear_algebra.cmxs))
 (native_archives linear_algebra/linear_algebra.a)
 (requires qcaml.common lacaml)
 (main_module_name Linear_algebra)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Linear_algebra)
   (modules
    ((name Conventions)
     (obj_name linear_algebra__Conventions)
     (visibility public)
     (impl)
     (intf))
    ((name Diis)
     (obj_name linear_algebra__Diis)
     (visibility public)
     (impl)
     (intf))
    ((name Four_idx_storage)
     (obj_name linear_algebra__Four_idx_storage)
     (visibility public)
     (impl)
     (intf))
    ((name Linear_algebra)
     (obj_name linear_algebra)
     (visibility public)
     (impl))
    ((name Matrix)
     (obj_name linear_algebra__Matrix)
     (visibility public)
     (impl)
     (intf))
    ((name Orthonormalization)
     (obj_name linear_algebra__Orthonormalization)
     (visibility public)
     (impl)
     (intf))
    ((name Spherical_to_cartesian)
     (obj_name linear_algebra__Spherical_to_cartesian)
     (visibility public)
     (impl)
     (intf))
    ((name Vector)
     (obj_name linear_algebra__Vector)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Linear_algebra__)
    (obj_name linear_algebra__)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.mo)
 (kind normal)
 (synopsis "Molecular orbitals")
 (archives (byte mo/mo.cma) (native mo/mo.cmxa))
 (plugins (byte mo/mo.cma) (native mo/mo.cmxs))
 (native_archives mo/mo.a)
 (requires qcaml.simulation)
 (main_module_name Mo)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Mo)
   (modules
    ((name Basis) (obj_name mo__Basis) (visibility public) (impl) (intf))
    ((name Class) (obj_name mo__Class) (visibility public) (impl) (intf))
    ((name Fock) (obj_name mo__Fock) (visibility public) (impl) (intf))
    ((name Frozen_core)
     (obj_name mo__Frozen_core)
     (visibility public)
     (impl)
     (intf))
    ((name Guess) (obj_name mo__Guess) (visibility public) (impl) (intf))
    ((name Hartree_fock)
     (obj_name mo__Hartree_fock)
     (visibility public)
     (impl)
     (intf))
    ((name Localization)
     (obj_name mo__Localization)
     (visibility public)
     (impl)
     (intf))
    ((name Mo_dim) (obj_name mo__Mo_dim) (visibility public) (impl) (intf)))
   (alias_module
    (name Mo)
    (obj_name mo)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.operators)
 (kind normal)
 (synopsis "Parameteried operators, such as F12 and range-separation")
 (archives (byte operators/operators.cma) (native operators/operators.cmxa))
 (plugins (byte operators/operators.cma) (native operators/operators.cmxs))
 (native_archives operators/operators.a)
 (requires qcaml.common)
 (main_module_name Operators)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Operators)
   (modules
    ((name F12_operator)
     (obj_name operators__F12_operator)
     (visibility public)
     (impl))
    ((name Gaussian_operator)
     (obj_name operators__Gaussian_operator)
     (visibility public)
     (impl))
    ((name Operator)
     (obj_name operators__Operator)
     (visibility public)
     (impl)
     (intf))
    ((name Rs_operator)
     (obj_name operators__Rs_operator)
     (visibility public)
     (impl)))
   (alias_module
    (name Operators)
    (obj_name operators)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.particles)
 (kind normal)
 (synopsis "Information relative to particles (electrons and nuclei).")
 (archives (byte particles/particles.cma) (native particles/particles.cmxa))
 (plugins (byte particles/particles.cma) (native particles/particles.cmxs))
 (native_archives particles/particles.a)
 (requires qcaml.common)
 (main_module_name Particles)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Particles)
   (modules
    ((name Electrons)
     (obj_name particles__Electrons)
     (visibility public)
     (impl)
     (intf))
    ((name Element)
     (obj_name particles__Element)
     (visibility public)
     (impl)
     (intf))
    ((name Mass) (obj_name particles__Mass) (visibility public) (impl) (intf))
    ((name Nuclei)
     (obj_name particles__Nuclei)
     (visibility public)
     (impl)
     (intf))
    ((name Nuclei_lexer)
     (obj_name particles__Nuclei_lexer)
     (visibility public)
     (impl))
    ((name Xyz_ast) (obj_name particles__Xyz_ast) (visibility public) (intf))
    ((name Xyz_parser)
     (obj_name particles__Xyz_parser)
     (visibility public)
     (impl)
     (intf))
    ((name Zmatrix)
     (obj_name particles__Zmatrix)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Particles)
    (obj_name particles)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.perturbation)
 (kind normal)
 (synopsis "Perturbation theory")
 (archives
  (byte perturbation/perturbation.cma)
  (native perturbation/perturbation.cmxa))
 (plugins
  (byte perturbation/perturbation.cma)
  (native perturbation/perturbation.cmxs))
 (native_archives perturbation/perturbation.a)
 (requires qcaml.simulation qcaml.mo)
 (main_module_name Perturbation)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Perturbation)
   (modules
    ((name Mp2)
     (obj_name perturbation__Mp2)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Perturbation)
    (obj_name perturbation)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name qcaml.simulation)
 (kind normal)
 (synopsis
  "Data describing a simulation (AOs, operators, nuclear coordinate,...)")
 (archives
  (byte simulation/simulation.cma)
  (native simulation/simulation.cmxa))
 (plugins
  (byte simulation/simulation.cma)
  (native simulation/simulation.cmxs))
 (native_archives simulation/simulation.a)
 (requires
  qcaml.common
  qcaml.particles
  qcaml.gaussian
  qcaml.gaussian_integrals
  qcaml.operators
  qcaml.ao)
 (main_module_name Simulation)
 (modes byte native)
 (modules
  (singleton
   (name Simulation)
   (obj_name simulation)
   (visibility public)
   (impl)
   (intf))))
(library
 (name qcaml.top)
 (kind normal)
 (synopsis "Installs pretty printers for top-level.")
 (archives (byte top/top.cma))
 (plugins (byte top/top.cma))
 (requires compiler-libs.toplevel qcaml)
 (main_module_name Top)
 (modes byte)
 (modules
  (wrapped
   (main_module_name Top)
   (modules
    ((name Install_printers)
     (obj_name top__Install_printers)
     (visibility public)
     (impl)))
   (alias_module
    (name Top)
    (obj_name top)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
